(()=>{"use strict";const e=(()=>{const e=document.getElementById("content"),a=()=>{let t=document.getElementById("form");e.removeChild(t)},s=()=>{const t=document.createElement("form"),d=document.createElement("label"),s=document.createElement("input"),r=document.createElement("input"),i=document.createElement("input");t.setAttribute("id","form"),d.setAttribute("for","inputText"),s.setAttribute("type","text"),s.setAttribute("id","inputText"),s.setAttribute("name","inputText"),r.setAttribute("type","button"),i.setAttribute("type","button"),r.setAttribute("value","Submit"),i.setAttribute("value","Cancel"),d.innerHTML="Task:",i.addEventListener("click",a),r.addEventListener("click",(()=>{n(s.value)})),r.addEventListener("click",(()=>{s.value=""})),r.addEventListener("click",(()=>{addTaskButton.disabled=!1})),r.addEventListener("click",(()=>{e.removeChild(t)})),t.appendChild(d),t.appendChild(s),t.appendChild(r),t.appendChild(i),e.appendChild(t)};return{renderForm:s,renderBones:()=>{const t=document.createElement("button"),n=document.createElement("button"),a=document.createElement("div");n.setAttribute("class","cleanButton"),a.setAttribute("class","wrapper"),t.setAttribute("id","addTaskButton"),t.innerHTML="+",n.innerHTML="Clean All",t.addEventListener("click",s),t.addEventListener("click",(()=>{t.disabled=!0})),n.addEventListener("click",d),e.appendChild(n),e.appendChild(t)},removeForm:a,renderTask:n=>{let d=document.createElement("label");d.setAttribute("class","taskLabel"),d.innerHTML=n.name;let a=document.createElement("button");a.setAttribute("class","taskButton"),a.innerHTML="Remove",a.addEventListener("click",(()=>{t.deleteTask(n.name)})),a.addEventListener("click",(()=>{e.removeChild(d)}));let s=document.createElement("button");s.setAttribute("class","taskButton"),s.innerHTML="Done",s.addEventListener("click",(()=>{e.removeChild(d)})),d.appendChild(s),d.appendChild(a),e.appendChild(d)}}})(),t=(()=>{let e;return{createTasksObj:()=>{void 0===e?(e={},console.log("tasksObj created")):console.log("tasksObj already exist")},getTasksObj:()=>e,addToTasksObj:t=>{e[t.name]=t},printTasksObj:()=>{for(let t in e)console.log("key from tasksObj "+t)},deleteTask:t=>{delete e[t]}}})(),n=n=>{let d={name:a=n,dueTime:s,project:r,status:i,priority:l,getTask:()=>{console.log(`task: ${a}, \n    duetime:undefined, \n    project undefined,\n    status undefined, \n    priority undefined`)}};var a,s,r,i,l;t.addToTasksObj(d),t.printTasksObj(),e.renderTask(d)},d=()=>{console.log("local storage is cleared"),storage.printLocalStorage()};window.addEventListener("load",t.createTasksObj),console.log("testing19"),e.renderBones()})();